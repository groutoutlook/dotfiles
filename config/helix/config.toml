theme = "catppuccin_macchiato_transparent"

[editor]
shell = [ "pwsh", "-NoProfile","-NoLogo", "-Command" , " $PSStyle.OutputRendering = [System.Management.Automation.OutputRendering]::PlainText; "]
auto-completion = true
auto-info = false
bufferline = "multiple"
color-modes = true
completion-trigger-len = 1
cursorline = true
default-yank-register = "+"
idle-timeout = 100
indent-guides.render = false
insert-final-newline = false
line-number = "relative"
middle-click-paste = true
mouse = true
rulers = [90]
scroll-lines = 1
scrolloff = 0
# shell = ["nu","-c"]
text-width = 90

[editor.gutters.line-numbers]
min-width = 0

[editor.gutters]
# layout = ["diagnostics", "diff", "line-numbers"]
layout = ["diff", "line-numbers"]

[editor.smart-tab]
enable = true
supersede-menu = true

[editor.soft-wrap]
enable = false
max-indent-retain = 0
max-wrap = 0 # increase value to reduce forced mid-word wrapping
wrap-at-text-width = false
wrap-indicator = ""  # set wrap-indicator to "" to hide it

[editor.cursor-shape]
normal = "block"
insert = "bar"
select = "bar"



[editor.lsp]
display-messages = true
display-inlay-hints = true

[editor.statusline]
left = ["mode", "spinner", "file-name", "file-type", "total-line-numbers", "file-encoding"]
center = []
right = ["selections", "primary-selection-length", "position", "position-percentage", "spacer", "separator",
"total-line-numbers","diagnostics", "version-control"]

[keys.normal]
"C-," = ":config-open"
"C-9" = ["rotate_selections_first"]
"C-0" = ["rotate_selections_last"]

C-z = [":rla",":redraw"] # while invoke runner in the file.
C-r = ":config-reload"
C-q = ":quit"
C-v = ["collapse_selection","paste_clipboard_before"]

# Personal preference
O = ["open_above", "insert_mode"]
"{" = ["goto_prev_paragraph", "collapse_selection"]
"}" = ["goto_next_paragraph", "collapse_selection"]

G = "goto_file_end"
w = 'extend_next_sub_word_start'
b = 'extend_prev_sub_word_start'
e = 'extend_next_sub_word_end'
C-A-left = ["move_prev_sub_word_start"]
C-A-right = ["move_next_sub_word_end"]

C-left = ["move_prev_word_start"]
C-right = ["move_next_word_start"]

V = ["select_mode", "extend_to_line_bounds"]

p = ["delete_selection_noyank", "paste_before"] # No life without this
Y = ["goto_line_start","extend_to_line_end", "yank_main_selection_to_clipboard", "collapse_selection"]

# Make j and k behave as they do Vim when soft-wrap is enabled
j = "move_line_down"
k = "move_line_up"

# HACK : mimic buffer motion in neovim.
"]" = { j = "jump_forward", b ="goto_next_buffer"}
"[" = { j = "jump_backward", b ="goto_previous_buffer"}

"," = "repeat_last_motion" # 
"C-." = "keep_primary_selection"
end = "goto_line_end_newline" # stop at linebreak; this is more useful
C-end = "goto_file_end" 
C-home = "goto_file_start"

del = ["move_next_word_end", "move_prev_word_end", "move_next_word_end", "delete_selection_noyank"] # delete current word
backspace = ["delete_char_backward"] # counterpart for `d`

C-del = ["move_next_sub_word_end", "delete_selection_noyank"] 
C-backspace = ["move_prev_sub_word_start", "delete_selection_noyank"]

"ret" = "goto_word"
"C-S-backspace" = "@g;zz"
"A-up" = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
"A-down" = ["extend_to_line_bounds", "delete_selection", "paste_after"]
# NOTE: to breakdown the up to text-width.
"C-w" = {"C-e" = [":toggle soft-wrap.enable"], "C-n" = [':toggle gutters.layout [] ["diff","line-numbers"]'],"C-S-e" = [":toggle soft-wrap.wrap-at-text-width"],"C-t" = [":toggle smart-tab.enable"]}

"d" = "delete_selection_noyank"
tab = "move_parent_node_end"
S-tab = "move_parent_node_start"
"C-]" = [ "match_brackets" ]  
o = "flip_selections"

# Copy path to the system clipboard https://github.com/helix-editor/helix/issues/12420
A-S-r = "copy_between_registers"
A-S-f = "@<A-S-r>%"
# HACK: experimental.
# "C-y" = "insert_char_interactive" 
[keys.normal.space]
"c" = "@<A-S-f>:cd <C-r>%+<C-w><ret>"
"r" = "@:wa!<ret>:! just " # write all and prepare runner just in case.
"A" = "@geA"
g.r = "@:diffg<ret>" # same as `nvim`.
g.g = "changed_file_picker"

[keys.normal.g]
";" = ["goto_last_modification","align_view_center"]
x = ["match_brackets", "match_brackets", "move_char_right", "select_mode", "match_brackets", "extend_char_left", "goto_file"]
0 = "@/https<ret>;mimgfo" # or just gx
9 = "@/https<ret>2N;mimgfo" # since sometimes you really want go back the previous line .
# will not work very good with multiple URLs in one line though.

[keys.normal.l]
q = [":quit-all!"]
[keys.normal.l.w]
w = [":write-all! --no-format"]
q = [":write-quit-all!"]

[keys.normal.D]
"." = "@f.;vt]dgs"
D = "@t<ret>d"
"t" = {"e" = "@gs/id<ret>f&;vt)dj"} # INFO: delete telemetry and keep only "id=" tag.
# 
# INFO: start insert mapping.
[keys.insert]
"C-]" = [ "match_brackets" ]
C-A-left = ["move_prev_sub_word_start"]
C-A-right = ["move_next_sub_word_end"]
C-left = ["move_prev_word_start"]
C-right = ["move_next_word_start"]
C-up = ["extend_to_line_bounds","goto_prev_paragraph"]
C-down = ["extend_to_line_bounds","goto_next_paragraph"]

# HACK: since S-ins is my default paste, windows terminal translate to pure paste by typing
C-v = ["normal_mode","paste_clipboard_before","goto_line_end_newline","insert_mode"]
# S-ins = "paste_clipboard_before
C-del = ["move_next_word_end", "delete_selection_noyank"] 
C-backspace = ["move_prev_sub_word_start", "delete_selection_noyank"]

C-space = ["completion"]
# "C-[" = ["normal_mode"] 

# INFO: goto mode support.
"C-ret" = ["goto_word","move_prev_word_start"]
"C-S-backspace" = ["goto_last_modification"]
C-end = "goto_file_end" 
C-home = "goto_file_start"

S-tab = "move_parent_node_start"
"C-t"."C-t" = [":toggle smart-tab.enable"]

"C-z" = "earlier"
"C-S-z" = "later"

"A-;" = "flip_selections"

"A-up" = ["normal_mode","extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before",]
"A-down" = ["normal_mode","extend_to_line_bounds", "delete_selection", "paste_after"]
[keys.insert.j]
k = ["normal_mode"]

[keys.insert.";".w]
q = [":write-quit-all!"]
w = [":write-all! --no-format","normal_mode"]

[keys.insert.";"]
q = [":quit-all!"]
b = {c = ":buffer-close", d = ":buffer-close"}
";" = "collapse_selection" 
"o" = "flip_selections" 

[keys.insert.l.w]
q = [":write-quit-all!"]


[keys.select]
# Muscle memory
o = "flip_selections"
O = "ensure_selections_forward"
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"}" = ["extend_to_line_bounds", "goto_next_paragraph"]
# 0 = "goto_line_start"
# "$" = "goto_line_end"
G = "goto_file_end"
# C = ["goto_line_start", "extend_to_line_bounds", "change_selection"]
"%" = "match_brackets"
# S = "surround_add" # Basically 99% of what I use vim-surround for
# u = ["switch_to_lowercase", "collapse_selection", "normal_mode"]
# U = ["switch_to_uppercase", "collapse_selection", "normal_mode"]
Y = ["extend_to_line_bounds", "yank_main_selection_to_clipboard", "goto_line_start", "collapse_selection", "normal_mode"]
p = "replace_selections_with_clipboard" # No life without this
P = "paste_clipboard_before"
"C-]" = [ "match_brackets" ] #, "select_textobject_inner"]
"C-w" = {"C-e" = [":reflow"]}
"," = "repeat_last_motion"
"C-." = "keep_primary_selection"
"d" = "delete_selection_noyank"

# HACK: I couldnt supress this even when I toggled smart-tab off.
# tab = "extend_parent_node_end"
# S-tab = "extend_parent_node_start"

"ret" = "goto_word"

W = 'extend_next_sub_word_start'
B = 'extend_prev_sub_word_start'
E = 'extend_next_sub_word_end'
"C-9" = ["rotate_selections_first"]
"C-0" = ["rotate_selections_last"]
C-A-left = ["move_prev_sub_word_start"]
C-A-right = ["move_next_sub_word_end"]


